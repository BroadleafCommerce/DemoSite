openapi: 3.0.1
info:
  title: Broadleaf Commerce API
  description: The default Broadleaf Commerce APIs
  version: v1
servers:
  - url: https://test.localhost:8445/api/v1
    description: Generated server url
security:
  - basicAuth: []
paths:
  /wishlist/items/{itemId}:
    put:
      tags:
        - wishlist-endpoint
      operationId: updateQuantityInWishlist
      parameters:
        - name: wishlistName
          in: query
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: quantity
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
    delete:
      tags:
        - wishlist-endpoint
      operationId: removeItemFromWishlist
      parameters:
        - name: wishlistName
          in: query
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /shipping/{cartId}/{fulfillmentGroupId}/address:
    put:
      tags:
        - fulfillment-endpoint
      operationId: updateFulfillmentGroupAddress
      parameters:
        - name: fulfillmentGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddressWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
  /shipping/{cartId}/group/{fulfillmentGroupId}/option/{fulfillmentOptionId}:
    put:
      tags:
        - fulfillment-endpoint
      operationId: addFulfillmentOptionToFulfillmentGroup
      parameters:
        - name: fulfillmentGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fulfillmentOptionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
  /customer:
    get:
      tags:
        - customer-endpoint
      operationId: findCustomerByEmail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
    put:
      tags:
        - customer-endpoint
      operationId: updateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
    post:
      tags:
        - customer-endpoint
      operationId: addCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
  /customer/payment/{paymentId}:
    put:
      tags:
        - customer-endpoint
      operationId: updateCustomerPayment
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPaymentWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerPaymentWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPaymentWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerPaymentWrapper'
    delete:
      tags:
        - customer-endpoint
      operationId: removeCustomerPayment
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerPaymentWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerPaymentWrapper'
  /customer/attribute:
    put:
      tags:
        - customer-endpoint
      operationId: addAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAttributeWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerAttributeWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
  /customer/address:
    get:
      tags:
        - customer-endpoint
      operationId: findAddress
      parameters:
        - name: addressName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerAddressWrapper'
    put:
      tags:
        - customer-endpoint
      operationId: addAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddressWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerAddressWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerAddressWrapper'
  /customer/address/{addressId}:
    put:
      tags:
        - customer-endpoint
      operationId: updateAddress
      parameters:
        - name: addressId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddressWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerAddressWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerAddressWrapper'
  /cart/{cartId}/items/{itemId}:
    put:
      tags:
        - cart-endpoint
      operationId: updateItemQuantity
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: quantity
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
    delete:
      tags:
        - cart-endpoint
      operationId: removeItemFromOrder
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /cart/{cartId}/item/{itemId}/attributes:
    put:
      tags:
        - cart-endpoint
      operationId: updateProductOptions
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemAttributeWrapper'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemAttributeWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
    delete:
      tags:
        - cart-endpoint
      operationId: deleteProductOptions
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemAttributeWrapper'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemAttributeWrapper'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /cart/{cartId}/attributes:
    put:
      tags:
        - cart-endpoint
      operationId: updateOrderAttributes
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderAttributeWrapper'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderAttributeWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
    delete:
      tags:
        - cart-endpoint
      operationId: deleteOrderAttributes
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderAttributeWrapper'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderAttributeWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /cart/checkout/payment/{paymentId}/transaction:
    put:
      tags:
        - checkout-endpoint
      operationId: addOrderPaymentTransaction
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: cartId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/PaymentTransactionWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPaymentWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderPaymentWrapper'
  /wishlist:
    get:
      tags:
        - wishlist-endpoint
      operationId: getWishlist
      parameters:
        - name: wishlistName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
    post:
      tags:
        - wishlist-endpoint
      operationId: moveListToCart
      parameters:
        - name: wishlistName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /wishlist/items/{itemId}/move:
    post:
      tags:
        - wishlist-endpoint
      operationId: moveItemToCart
      parameters:
        - name: wishlistName
          in: query
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /wishlist/item:
    post:
      tags:
        - wishlist-endpoint
      operationId: addItemToWishlist
      parameters:
        - name: wishlistName
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /wishlist/configure-item:
    post:
      tags:
        - wishlist-endpoint
      operationId: addConfigureItemToWishlist
      parameters:
        - name: wishlistName
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurableOrderItemWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /shipping/{cartId}/group:
    post:
      tags:
        - fulfillment-endpoint
      operationId: addFulfillmentGroupToOrder
      parameters:
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentGroupWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/FulfillmentGroupWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
  /shipping/{cartId}/group/{fulfillmentGroupId}/item:
    post:
      tags:
        - fulfillment-endpoint
      operationId: addItemToFulfillmentGroup
      parameters:
        - name: fulfillmentGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentGroupItemWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/FulfillmentGroupItemWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
  /ratings/{itemId}:
    get:
      tags:
        - rating-endpoint
      operationId: getRatingsForItem
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: ratingType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
    put:
      tags:
        - rating-endpoint
      operationId: getRatingsForItem_2
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: ratingType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
    post:
      tags:
        - rating-endpoint
      operationId: submitReviewForItem_1
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: ratingType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewDetailWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
    delete:
      tags:
        - rating-endpoint
      operationId: getRatingsForItem_4
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: ratingType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
    options:
      tags:
        - rating-endpoint
      operationId: getRatingsForItem_5
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: ratingType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
    head:
      tags:
        - rating-endpoint
      operationId: getRatingsForItem_1
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: ratingType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
    patch:
      tags:
        - rating-endpoint
      operationId: getRatingsForItem_3
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: ratingType
          in: query
          required: false
          schema:
            type: string
            default: PRODUCT
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/RatingSummaryWrapper'
  /customer/payment:
    get:
      tags:
        - customer-endpoint
      operationId: findCustomerPayment
      parameters:
        - name: paymentId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPaymentWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerPaymentWrapper'
    post:
      tags:
        - customer-endpoint
      operationId: addCustomerPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPaymentWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerPaymentWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPaymentWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerPaymentWrapper'
  /customer/password:
    post:
      tags:
        - customer-endpoint
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordForm'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangePasswordForm'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
  /cart:
    get:
      tags:
        - cart-endpoint
      operationId: findCartForCustomer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
    post:
      tags:
        - cart-endpoint
      operationId: createNewCartForCustomer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /cart/{cartId}/offer/{promoCode}:
    post:
      tags:
        - cart-endpoint
      operationId: addOfferCode
      parameters:
        - name: promoCode
          in: path
          required: true
          schema:
            type: string
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
    delete:
      tags:
        - cart-endpoint
      operationId: removeOfferCode
      parameters:
        - name: promoCode
          in: path
          required: true
          schema:
            type: string
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /cart/{cartId}/item:
    post:
      tags:
        - cart-endpoint
      operationId: addItemToOrder
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: isUpdateRequest
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderItemWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /cart/checkout:
    post:
      tags:
        - checkout-endpoint
      operationId: performCheckout
      parameters:
        - name: cartId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /cart/checkout/payment:
    post:
      tags:
        - checkout-endpoint
      operationId: addPaymentToOrder
      parameters:
        - name: cartId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrderPaymentWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPaymentWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderPaymentWrapper'
  /cart/checkout/payment/{customerPaymentId}:
    post:
      tags:
        - checkout-endpoint
      operationId: addPaymentToOrderById
      parameters:
        - name: amount
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: currency
          in: query
          required: true
          schema:
            type: string
        - name: customerPaymentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: cartId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPaymentWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderPaymentWrapper'
  /shipping/{cartId}/group/{fulfillmentGroupId}:
    delete:
      tags:
        - fulfillment-endpoint
      operationId: removeFulfillmentGroupFromOrder
      parameters:
        - name: fulfillmentGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentGroupWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentGroupWrapper'
    patch:
      tags:
        - fulfillment-endpoint
      operationId: updateFulfillmentGroup
      parameters:
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fulfillmentGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentGroupWrapper'
          application/xml:
            schema:
              $ref: '#/components/schemas/FulfillmentGroupWrapper'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
  /shipping/{cartId}/groups:
    get:
      tags:
        - fulfillment-endpoint
      operationId: findFulfillmentGroupsForOrder
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentGroupWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentGroupWrapper'
    delete:
      tags:
        - fulfillment-endpoint
      operationId: removeAllFulfillmentGroupsFromOrder
      parameters:
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /shipping/options:
    get:
      tags:
        - fulfillment-endpoint
      operationId: findFulfillmentOptions
      parameters:
        - name: fulfillmentType
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentOptionWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentOptionWrapper'
  /related-products:
    get:
      tags:
        - related-products-endpoint
      operationId: getRelatedProducts
      parameters:
        - name: productId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: productKey
          in: query
          required: false
          schema:
            type: string
        - name: categoryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: categoryKey
          in: query
          required: false
          schema:
            type: string
        - name: quantity
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: type
          in: query
          required: false
          schema:
            type: string
        - name: includePromotionMessages
          in: query
          required: false
          schema:
            type: boolean
        - name: includePriceData
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductWrapper'
  /promotion-messages/{productId}:
    get:
      tags:
        - promotion-message-endpoint
      operationId: findPromotionMessagesForProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/PromotionMessageDTOWrapper'
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/PromotionMessageDTOWrapper'
  /orders:
    get:
      tags:
        - order-history-endpoint
      operationId: findOrdersForCustomer
      parameters:
        - name: orderStatus
          in: query
          required: false
          schema:
            type: string
            default: SUBMITTED
        - name: orderNumber
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderWrapper'
  /orders/{orderId}:
    get:
      tags:
        - order-history-endpoint
      operationId: findOrderById
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /orders/summary:
    get:
      tags:
        - order-history-endpoint
      operationId: findAllOrdersForCustomer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderWrapper'
  /customer/payments:
    get:
      tags:
        - customer-endpoint
      operationId: findAllCustomerPayments
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerPaymentWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerPaymentWrapper'
    delete:
      tags:
        - customer-endpoint
      operationId: removeAllCustomerPayments
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
  /customer/addresses:
    get:
      tags:
        - customer-endpoint
      operationId: findAllAddresses
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerAddressWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerAddressWrapper'
    delete:
      tags:
        - customer-endpoint
      operationId: removeAllAddresses
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
  /catalog/sku/{skuId}:
    get:
      tags:
        - catalog-endpoint
      operationId: findSkuById
      parameters:
        - name: skuId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/SkuWrapper'
  /catalog/sku/{skuId}/media:
    get:
      tags:
        - catalog-endpoint
      operationId: findMediaForSku
      parameters:
        - name: skuId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaWrapper'
  /catalog/sku/{skuId}/attributes:
    get:
      tags:
        - catalog-endpoint
      operationId: findSkuAttributesForSku
      parameters:
        - name: skuId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkuAttributeWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkuAttributeWrapper'
  /catalog/sku/inventory:
    get:
      tags:
        - catalog-endpoint
      operationId: findInventoryForSkus
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryWrapper'
  /catalog/search:
    get:
      tags:
        - catalog-endpoint
      operationId: findSearchResultsByQuery
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 15
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: includePromotionMessages
          in: query
          required: false
          schema:
            type: boolean
        - name: includePriceData
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultsWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchResultsWrapper'
  /catalog/search/category/{categoryId}:
    get:
      tags:
        - catalog-endpoint
      operationId: findSearchResultsByCategoryAndQuery
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: q
          in: query
          required: false
          schema:
            type: string
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 15
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: includePromotionMessages
          in: query
          required: false
          schema:
            type: boolean
        - name: includePriceData
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultsWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchResultsWrapper'
  /catalog/product/{productId}/upsale:
    get:
      tags:
        - catalog-endpoint
      operationId: findUpSaleProductsByProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedProductWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedProductWrapper'
  /catalog/product/{productId}/skus:
    get:
      tags:
        - catalog-endpoint
      operationId: findSkusByProductById
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkuWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkuWrapper'
  /catalog/product/{productId}/media:
    get:
      tags:
        - catalog-endpoint
      operationId: findMediaForProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaWrapper'
  /catalog/product/{productId}/defaultSku:
    get:
      tags:
        - catalog-endpoint
      operationId: findDefaultSkuByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/SkuWrapper'
  /catalog/product/{productId}/crosssale:
    get:
      tags:
        - catalog-endpoint
      operationId: findCrossSaleProductsByProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedProductWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedProductWrapper'
  /catalog/product/{productId}/categories:
    get:
      tags:
        - catalog-endpoint
      operationId: findParentCategoriesForProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CategoriesWrapper'
  /catalog/product/{productId}/attributes:
    get:
      tags:
        - catalog-endpoint
      operationId: findProductAttributesForProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAttributeWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAttributeWrapper'
  /catalog/product/{id}:
    get:
      tags:
        - catalog-endpoint
      operationId: findProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: includePromotionMessages
          in: query
          required: false
          schema:
            type: boolean
        - name: includePriceData
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProductWrapper'
  /catalog/category:
    get:
      tags:
        - catalog-endpoint
      operationId: findCategoryByIdOrName
      parameters:
        - name: searchParameter
          in: query
          required: true
          schema:
            type: string
        - name: productLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: productOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: subcategoryLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: subcategoryOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CategoryWrapper'
  /catalog/category/{id}/media:
    get:
      tags:
        - catalog-endpoint
      operationId: findMediaForCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaWrapper'
  /catalog/category/{categoryId}:
    get:
      tags:
        - catalog-endpoint
      operationId: findCategoryById
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: productLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: productOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: subcategoryLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: subcategoryOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CategoryWrapper'
  /catalog/category/{categoryId}/categories:
    get:
      tags:
        - catalog-endpoint
      operationId: findSubCategories
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: active
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CategoriesWrapper'
  /catalog/category/{categoryId}/attributes:
    get:
      tags:
        - catalog-endpoint
      operationId: findCategoryAttributesForCategory
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryAttributeWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryAttributeWrapper'
  /catalog/category/{categoryId}/activeSubcategories:
    get:
      tags:
        - catalog-endpoint
      operationId: findActiveSubCategories
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CategoriesWrapper'
  /catalog/categories:
    get:
      tags:
        - catalog-endpoint
      operationId: findAllCategories
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CategoriesWrapper'
  /cart/{cartId}:
    get:
      tags:
        - cart-endpoint
      operationId: findCartById
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /cart/reconfigure/{orderItemId}:
    get:
      tags:
        - cart-endpoint
      operationId: reconfigureOrderItemFromOrder
      parameters:
        - name: orderItemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurableOrderItemWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConfigurableOrderItemWrapper'
  /cart/configure/{productId}:
    get:
      tags:
        - cart-endpoint
      operationId: configureProductItem
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurableOrderItemWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConfigurableOrderItemWrapper'
  /cart/checkout/payments:
    get:
      tags:
        - checkout-endpoint
      operationId: findPaymentsForOrder
      parameters:
        - name: cartId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderPaymentWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderPaymentWrapper'
  /shipping/{cartId}/group/{fulfillmentGroupId}/item/{itemId}:
    delete:
      tags:
        - fulfillment-endpoint
      operationId: removeOrderItemFromFulfillmentGroup
      parameters:
        - name: fulfillmentGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/FulfillmentGroupWrapper'
  /customer/attributes:
    delete:
      tags:
        - customer-endpoint
      operationId: removeAllAttributes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
  /customer/attribute/{attributeName}:
    delete:
      tags:
        - customer-endpoint
      operationId: removeAttribute
      parameters:
        - name: attributeName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerWrapper'
  /customer/address/{addressName}:
    delete:
      tags:
        - customer-endpoint
      operationId: removeAddress
      parameters:
        - name: addressName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerAddressWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerAddressWrapper'
  /cart/{cartId}/offers:
    delete:
      tags:
        - cart-endpoint
      operationId: removeAllOfferCodes
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: priceOrder
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /cart/checkout/payment/{paymentId}:
    delete:
      tags:
        - checkout-endpoint
      operationId: removePaymentFromOrderById
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: cartId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrderWrapper'
  /shipping/{cartId}/estimate:
    get:
      tags:
        - fulfillment-endpoint
      operationId: getFulfillmentEstimations
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
    put:
      tags:
        - fulfillment-endpoint
      operationId: getFulfillmentEstimations_3
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
    post:
      tags:
        - fulfillment-endpoint
      operationId: getFulfillmentEstimations_2
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
    delete:
      tags:
        - fulfillment-endpoint
      operationId: getFulfillmentEstimations_5
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
    options:
      tags:
        - fulfillment-endpoint
      operationId: getFulfillmentEstimations_6
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
    head:
      tags:
        - fulfillment-endpoint
      operationId: getFulfillmentEstimations_1
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
    patch:
      tags:
        - fulfillment-endpoint
      operationId: getFulfillmentEstimations_4
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentEstimationWrapper'
components:
  schemas:
    AddressWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        state:
          $ref: '#/components/schemas/StateWrapper'
        country:
          $ref: '#/components/schemas/CountryWrapper'
        isoCountrySubdivision:
          type: string
        stateProvinceRegion:
          type: string
        isoCountryAlpha2:
          $ref: '#/components/schemas/ISOCountryWrapper'
        postalCode:
          type: string
        phonePrimary:
          $ref: '#/components/schemas/PhoneWrapper'
        phoneSecondary:
          $ref: '#/components/schemas/PhoneWrapper'
        phoneFax:
          $ref: '#/components/schemas/PhoneWrapper'
        companyName:
          type: string
        isBusiness:
          type: boolean
        isDefault:
          type: boolean
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: address
    AdjustmentWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        offerid:
          type: integer
          format: int64
        reason:
          type: string
        marketingMessage:
          type: string
        adjustmentValue:
          $ref: '#/components/schemas/Money'
        discountType:
          type: string
        discountAmount:
          type: number
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: adjustment
    ApplicationContext:
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/ApplicationContext'
        id:
          type: string
        displayName:
          type: string
        autowireCapableBeanFactory:
          $ref: '#/components/schemas/AutowireCapableBeanFactory'
        applicationName:
          type: string
        startupDate:
          type: integer
          format: int64
        environment:
          $ref: '#/components/schemas/Environment'
        beanDefinitionNames:
          type: array
          items:
            type: string
        beanDefinitionCount:
          type: integer
          format: int32
        parentBeanFactory:
          $ref: '#/components/schemas/BeanFactory'
        classLoader:
          type: object
          properties:
            name:
              type: string
            registeredAsParallelCapable:
              type: boolean
            parent:
              type: object
              properties:
                name:
                  type: string
                registeredAsParallelCapable:
                  type: boolean
                unnamedModule:
                  type: object
                  properties:
                    name:
                      type: string
                    classLoader:
                      type: object
                      properties:
                        name:
                          type: string
                        registeredAsParallelCapable:
                          type: boolean
                        definedPackages:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              annotations:
                                type: array
                                items:
                                  type: object
                              declaredAnnotations:
                                type: array
                                items:
                                  type: object
                              sealed:
                                type: boolean
                              specificationTitle:
                                type: string
                              specificationVersion:
                                type: string
                              specificationVendor:
                                type: string
                              implementationTitle:
                                type: string
                              implementationVersion:
                                type: string
                              implementationVendor:
                                type: string
                        defaultAssertionStatus:
                          type: boolean
                          writeOnly: true
                    descriptor:
                      type: object
                      properties:
                        open:
                          type: boolean
                        automatic:
                          type: boolean
                    named:
                      type: boolean
                    annotations:
                      type: array
                      items:
                        type: object
                    declaredAnnotations:
                      type: array
                      items:
                        type: object
                    packages:
                      uniqueItems: true
                      type: array
                      items:
                        type: string
                    layer:
                      type: object
                definedPackages:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      annotations:
                        type: array
                        items:
                          type: object
                      declaredAnnotations:
                        type: array
                        items:
                          type: object
                      sealed:
                        type: boolean
                      specificationTitle:
                        type: string
                      specificationVersion:
                        type: string
                      specificationVendor:
                        type: string
                      implementationTitle:
                        type: string
                      implementationVersion:
                        type: string
                      implementationVendor:
                        type: string
                defaultAssertionStatus:
                  type: boolean
                  writeOnly: true
            unnamedModule:
              type: object
              properties:
                name:
                  type: string
                classLoader:
                  type: object
                  properties:
                    name:
                      type: string
                    registeredAsParallelCapable:
                      type: boolean
                    definedPackages:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          annotations:
                            type: array
                            items:
                              type: object
                          declaredAnnotations:
                            type: array
                            items:
                              type: object
                          sealed:
                            type: boolean
                          specificationTitle:
                            type: string
                          specificationVersion:
                            type: string
                          specificationVendor:
                            type: string
                          implementationTitle:
                            type: string
                          implementationVersion:
                            type: string
                          implementationVendor:
                            type: string
                    defaultAssertionStatus:
                      type: boolean
                      writeOnly: true
                descriptor:
                  type: object
                  properties:
                    open:
                      type: boolean
                    automatic:
                      type: boolean
                named:
                  type: boolean
                annotations:
                  type: array
                  items:
                    type: object
                declaredAnnotations:
                  type: array
                  items:
                    type: object
                packages:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                layer:
                  type: object
            definedPackages:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  annotations:
                    type: array
                    items:
                      type: object
                  declaredAnnotations:
                    type: array
                    items:
                      type: object
                  sealed:
                    type: boolean
                  specificationTitle:
                    type: string
                  specificationVersion:
                    type: string
                  specificationVendor:
                    type: string
                  implementationTitle:
                    type: string
                  implementationVersion:
                    type: string
                  implementationVendor:
                    type: string
            defaultAssertionStatus:
              type: boolean
              writeOnly: true
    AutowireCapableBeanFactory:
      type: object
    BeanFactory:
      type: object
    BroadleafEnumerationTypeWrapper:
      type: object
      properties:
        friendlyName:
          type: string
        type:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: BroadleafEnumerationTypeWrapper
    CartMessageWrapper:
      type: object
      properties:
        message:
          type: string
        messageType:
          type: string
        priority:
          type: integer
          format: int32
        errorCode:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: message
    CountryWrapper:
      type: object
      properties:
        name:
          type: string
        abbreviation:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: country
    CustomerAttributeWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        customerId:
          type: integer
          format: int64
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: customerAttribute
    CustomerWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        emailAddress:
          type: string
        registered:
          type: boolean
        customerAttributes:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CustomerAttributeWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: customer
    Environment:
      type: object
      properties:
        defaultProfiles:
          type: array
          items:
            type: string
        activeProfiles:
          type: array
          items:
            type: string
    FulfillmentGroupItemWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fulfillmentGroupId:
          type: integer
          format: int64
        orderItemId:
          type: integer
          format: int64
        orderItem:
          $ref: '#/components/schemas/OrderItemWrapper'
        totalTax:
          $ref: '#/components/schemas/Money'
        quantity:
          type: integer
          format: int32
        totalItemAmount:
          $ref: '#/components/schemas/Money'
        taxDetails:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TaxDetailWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: fulfillmentGroupItem
    FulfillmentGroupWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderId:
          type: integer
          format: int64
        fulfillmentType:
          $ref: '#/components/schemas/BroadleafEnumerationTypeWrapper'
        fulfillmentOption:
          $ref: '#/components/schemas/FulfillmentOptionWrapper'
        total:
          $ref: '#/components/schemas/Money'
        address:
          $ref: '#/components/schemas/AddressWrapper'
        phone:
          $ref: '#/components/schemas/PhoneWrapper'
        fulfillmentGroupAdjustments:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AdjustmentWrapper'
        fulfillmentGroupItems:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/FulfillmentGroupItemWrapper'
        taxDetails:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TaxDetailWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: fulfillmentGroup
    FulfillmentOptionWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        fulfillmentType:
          $ref: '#/components/schemas/BroadleafEnumerationTypeWrapper'
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: fulfillmentOption
    ISOCountryWrapper:
      type: object
      properties:
        name:
          type: string
        alpha2:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: isoCountry
    MapElementWrapper:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      xml:
        name: element
    MediaWrapper:
      type: object
      properties:
        allowOverrideUrl:
          type: boolean
        id:
          type: integer
          format: int64
        title:
          type: string
        url:
          type: string
        altText:
          type: string
        tags:
          type: string
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: media
    Money:
      type: object
      properties:
        amount:
          type: number
        currency:
          type: object
          properties:
            currencyCode:
              type: string
            displayName:
              type: string
            symbol:
              type: string
            defaultFractionDigits:
              type: integer
              format: int32
            numericCode:
              type: integer
              format: int32
            numericCodeAsString:
              type: string
    OrderAttributeWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        orderId:
          type: integer
          format: int64
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: orderAttribute
    OrderItemAttributeWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        orderItemId:
          type: integer
          format: int64
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: orderItemAttribute
    OrderItemPriceDetailWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        totalAdjustmentValue:
          $ref: '#/components/schemas/Money'
        totalAdjustedPrice:
          $ref: '#/components/schemas/Money'
        quantity:
          type: integer
          format: int32
        orderItemPriceDetailAdjustments:
          type: array
          xml:
            name: adjustments
            wrapped: true
          items:
            $ref: '#/components/schemas/AdjustmentWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: orderItemAttribute
    OrderItemQualifierWrapper:
      type: object
      properties:
        offerId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: orderItemQualifier
    OrderItemWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        quantity:
          type: integer
          format: int32
        averagePrice:
          $ref: '#/components/schemas/Money'
        retailPrice:
          $ref: '#/components/schemas/Money'
        salePrice:
          $ref: '#/components/schemas/Money'
        totalPrice:
          $ref: '#/components/schemas/Money'
        totalAdjustmentValue:
          $ref: '#/components/schemas/Money'
        priceBeforeAdjustments:
          $ref: '#/components/schemas/Money'
        orderId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        skuId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        productUrl:
          type: string
        hasValidationError:
          type: boolean
        primaryMedia:
          $ref: '#/components/schemas/MediaWrapper'
        isBundle:
          type: boolean
        parentOrderItemId:
          type: integer
          format: int64
        orderItemAttributes:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderItemAttributeWrapper'
        additionalAttributes:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/MapElementWrapper'
        orderItemPriceDetails:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderItemPriceDetailWrapper'
        bundleItems:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderItemWrapper'
        childOrderItems:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderItemWrapper'
        qualifiers:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderItemQualifierWrapper'
        cartMessages:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: cartMessages
        isDiscountingAllowed:
          type: boolean
        bundle:
          type: boolean
        discountingAllowed:
          type: boolean
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: orderItem
    OrderPaymentWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderId:
          type: integer
          format: int64
        type:
          type: string
        billingAddress:
          $ref: '#/components/schemas/AddressWrapper'
        amount:
          type: number
        currency:
          type: object
          properties:
            currencyCode:
              type: string
            displayName:
              type: string
            symbol:
              type: string
            defaultFractionDigits:
              type: integer
              format: int32
            numericCode:
              type: integer
              format: int32
            numericCodeAsString:
              type: string
        referenceNumber:
          type: string
        gatewayType:
          type: string
        transactions:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PaymentTransactionWrapper'
        active:
          type: boolean
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: payment
    OrderWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderNumber:
          type: string
        emailAddress:
          type: string
        status:
          type: string
        submitDate:
          type: string
          format: date-time
        totalTax:
          $ref: '#/components/schemas/Money'
        totalShipping:
          $ref: '#/components/schemas/Money'
        itemAdjustmentsValue:
          $ref: '#/components/schemas/Money'
        fulfillmentGroupAdjustmentsValue:
          $ref: '#/components/schemas/Money'
        orderAdjustmentsValue:
          $ref: '#/components/schemas/Money'
        totalAdjustmentsValue:
          $ref: '#/components/schemas/Money'
        subTotal:
          $ref: '#/components/schemas/Money'
        total:
          $ref: '#/components/schemas/Money'
        itemCount:
          type: integer
          format: int32
        customer:
          $ref: '#/components/schemas/CustomerWrapper'
        orderItems:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderItemWrapper'
        fulfillmentGroups:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/FulfillmentGroupWrapper'
        payments:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderPaymentWrapper'
        orderAdjustments:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AdjustmentWrapper'
        orderAttributes:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderAttributeWrapper'
        cartMessages:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CartMessageWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: order
    PaymentTransactionWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderPaymentId:
          type: integer
          format: int64
        parentTransactionId:
          type: integer
          format: int64
        type:
          type: string
        customerIpAddress:
          type: string
        rawResponse:
          type: string
        success:
          type: boolean
        amount:
          type: number
        currency:
          type: object
          properties:
            currencyCode:
              type: string
            displayName:
              type: string
            symbol:
              type: string
            defaultFractionDigits:
              type: integer
              format: int32
            numericCode:
              type: integer
              format: int32
            numericCodeAsString:
              type: string
        additionalFields:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/MapElementWrapper'
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: transaction
    PhoneWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        phoneNumber:
          type: string
        isActive:
          type: boolean
        isDefault:
          type: boolean
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: phone
    StateWrapper:
      type: object
      properties:
        name:
          type: string
        abbreviation:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: state
    TaxDetailWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        taxType:
          $ref: '#/components/schemas/BroadleafEnumerationTypeWrapper'
        amount:
          $ref: '#/components/schemas/Money'
        rate:
          type: number
        currency:
          type: string
        jurisdictionName:
          type: string
        taxName:
          type: string
        region:
          type: string
        country:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: taxDetail
    CustomerPaymentWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        paymentToken:
          type: string
        isDefault:
          type: boolean
        billingAddress:
          $ref: '#/components/schemas/AddressWrapper'
        customer:
          $ref: '#/components/schemas/CustomerWrapper'
        expirationDate:
          type: string
          format: date-time
        cardName:
          type: string
        lastFour:
          type: string
        cardType:
          type: string
        paymentGatewayType:
          type: string
        paymentType:
          type: string
        additionalFields:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/MapElementWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: customerPayment
    CustomerAddressWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        addressName:
          type: string
        address:
          $ref: '#/components/schemas/AddressWrapper'
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: customerAddress
    ConfigurableOrderItemWrapper:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductWrapper'
        productChoices:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ConfigurableOrderItemWrapper'
        productId:
          type: integer
          format: int64
        skuId:
          type: integer
          format: int64
        orderItemId:
          type: integer
          format: int64
        overrideSalePrice:
          $ref: '#/components/schemas/Money'
        overrideRetailPrice:
          $ref: '#/components/schemas/Money'
        parentOrderItemId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        minQuantity:
          type: integer
          format: int32
        maxQuantity:
          type: integer
          format: int32
        displayPrice:
          $ref: '#/components/schemas/Money'
        orderItemIndex:
          type: integer
          format: int32
        hasConfigurationError:
          type: boolean
        itemAttributes:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OrderItemAttributeWrapper'
        additionalAttributes:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/MapElementWrapper'
        childOrderItems:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ConfigurableOrderItemWrapper'
        originalOrderItemId:
          type: integer
          format: int64
        updateRequest:
          type: boolean
        multiSelect:
          type: boolean
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: configurableOrderItem
    DimensionWrapper:
      type: object
      properties:
        width:
          type: number
        height:
          type: number
        depth:
          type: number
        girth:
          type: number
        container:
          type: string
        size:
          type: string
        dimensionUnitOfMeasure:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
    DynamicSkuPricesWrapper:
      type: object
      properties:
        retailPrice:
          $ref: '#/components/schemas/Money'
        salePrice:
          $ref: '#/components/schemas/Money'
        priceAdjustment:
          $ref: '#/components/schemas/Money'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: priceData
    ProductAttributeWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        attributeName:
          type: string
        attributeValue:
          type: string
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: productAttribute
    ProductOptionValueWrapper:
      type: object
      properties:
        attributeValue:
          type: string
        priceAdjustment:
          $ref: '#/components/schemas/Money'
        productOptionId:
          type: integer
          format: int64
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: productOptionAllowedValue
    ProductOptionWrapper:
      type: object
      properties:
        attributeName:
          type: string
        label:
          type: string
        required:
          type: boolean
        productOptionType:
          type: string
        productOptionValidationStrategyType:
          type: string
        productOptionValidationType:
          type: string
        allowedValues:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ProductOptionValueWrapper'
        validationString:
          type: string
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: productOption
    ProductWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        longDescription:
          type: string
        url:
          type: string
        retailPrice:
          $ref: '#/components/schemas/Money'
        salePrice:
          $ref: '#/components/schemas/Money'
        primaryMedia:
          $ref: '#/components/schemas/MediaWrapper'
        dynamicSkuPrices:
          $ref: '#/components/schemas/DynamicSkuPricesWrapper'
        active:
          type: boolean
        productOptions:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ProductOptionWrapper'
        priority:
          type: integer
          format: int32
        bundleItemsRetailPrice:
          $ref: '#/components/schemas/Money'
        bundleItemsSalePrice:
          $ref: '#/components/schemas/Money'
        activeStartDate:
          type: string
          format: date-time
        activeEndDate:
          type: string
          format: date-time
        manufacturer:
          type: string
        model:
          type: string
        promoMessage:
          type: string
        defaultSku:
          $ref: '#/components/schemas/SkuWrapper'
        additionalSkus:
          type: array
          items:
            $ref: '#/components/schemas/SkuWrapper'
        defaultCategoryId:
          type: integer
          format: int64
        upsaleProducts:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RelatedProductWrapper'
        crossSaleProducts:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RelatedProductWrapper'
        productAttributes:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ProductAttributeWrapper'
        media:
          type: array
          xml:
            name: mediaItems
            wrapped: true
          items:
            $ref: '#/components/schemas/MediaWrapper'
        skuBundleItems:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SkuBundleItemWrapper'
        promotionMessages:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/PromotionMessageDTOWrapper'
          xml:
            wrapped: true
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: product
    PromotionMessageDTOWrapper:
      type: object
      properties:
        message:
          type: string
        messagePlacement:
          type: string
        localeCode:
          type: string
        priority:
          type: integer
          format: int32
        media:
          $ref: '#/components/schemas/MediaWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: promotionMessage
    RelatedProductWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sequence:
          type: number
        promotionalMessage:
          type: string
        product:
          $ref: '#/components/schemas/ProductWrapper'
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: relatedProduct
    SkuBundleItemWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        salePrice:
          $ref: '#/components/schemas/Money'
        retailPrice:
          $ref: '#/components/schemas/Money'
        bundleId:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/SkuWrapper'
        name:
          type: string
        active:
          type: boolean
        description:
          type: string
        longDescription:
          type: string
        productId:
          type: integer
          format: int64
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: skuBundleItem
    SkuWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        activeStartDate:
          type: string
          format: date-time
        activeEndDate:
          type: string
          format: date-time
        name:
          type: string
        active:
          type: boolean
        available:
          type: boolean
        inventoryType:
          type: string
        description:
          type: string
        retailPrice:
          $ref: '#/components/schemas/Money'
        salePrice:
          $ref: '#/components/schemas/Money'
        weight:
          $ref: '#/components/schemas/WeightWrapper'
        dimension:
          $ref: '#/components/schemas/DimensionWrapper'
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: sku
    WeightWrapper:
      type: object
      properties:
        weight:
          type: number
        unitOfMeasure:
          type: string
      xml:
        name: weight
    RatingDetailWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        rating:
          type: number
          format: double
        ratingSubmittedDate:
          type: string
          format: date-time
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: rating
    ReviewDetailWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author:
          type: string
        reviewSubmittedDate:
          type: string
          format: date-time
        reviewText:
          type: string
        reviewStatus:
          type: string
        helpfulCount:
          type: integer
          format: int32
        notHelpfulCount:
          type: integer
          format: int32
        reviewFeedback:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ReviewFeedbackWrapper'
        ratingDetail:
          $ref: '#/components/schemas/RatingDetailWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: review
    ReviewFeedbackWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        helpful:
          type: boolean
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: reviewFeedback
    RatingSummaryWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ratingType:
          type: string
        itemId:
          type: string
        numberOfRatings:
          type: integer
          format: int32
        numberOfReviews:
          type: integer
          format: int32
        averageRating:
          type: number
          format: double
        currentCustomerReview:
          $ref: '#/components/schemas/ReviewDetailWrapper'
        reviews:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ReviewDetailWrapper'
        ratings:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RatingDetailWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: ratingSummary
    ChangePasswordForm:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        newPasswordConfirm:
          type: string
    SkuAttributeWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        skuId:
          type: integer
          format: int64
        attributeName:
          type: string
        attributeValue:
          type: string
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: skuAttribute
    InventoryWrapper:
      type: object
      properties:
        skuId:
          type: integer
          format: int64
        quantityAvailable:
          type: integer
          format: int32
        inventoryType:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: inventory
    SearchFacetValueWrapper:
      type: object
      properties:
        active:
          type: boolean
        value:
          type: string
        valueKey:
          type: string
        quantity:
          type: integer
          format: int32
        minValue:
          type: number
        maxValue:
          type: number
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: searchFacetValue
    SearchFacetWrapper:
      type: object
      properties:
        fieldName:
          type: string
        label:
          type: string
        active:
          type: boolean
        values:
          type: array
          items:
            $ref: '#/components/schemas/SearchFacetValueWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: searchFacet
    SearchResultsWrapper:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalResults:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        products:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ProductWrapper'
        searchFacets:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SearchFacetWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: searchResults
    CategoriesWrapper:
      type: object
      properties:
        categories:
          type: array
          xml:
            name: category
          items:
            $ref: '#/components/schemas/CategoryWrapper'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: categories
    CategoryAttributeWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        attributeName:
          type: string
        attributeValue:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: categoryAttribute
    CategoryWrapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        longDescription:
          type: string
        active:
          type: boolean
        url:
          type: string
        urlKey:
          type: string
        activeStartDate:
          type: string
          format: date-time
        activeEndDate:
          type: string
          format: date-time
        subcategories:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CategoryWrapper'
        products:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ProductWrapper'
        categoryAttributes:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CategoryAttributeWrapper'
        archived:
          type: string
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: category
    FulfillmentEstimationWrapper:
      type: object
      properties:
        fulfillmentOption:
          $ref: '#/components/schemas/FulfillmentOptionWrapper'
        price:
          $ref: '#/components/schemas/Money'
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
      xml:
        name: fulfillmentEstimation
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic